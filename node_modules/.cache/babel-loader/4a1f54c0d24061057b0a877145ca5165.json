{"ast":null,"code":"import _regeneratorRuntime from\"/home/user/Desktop/Projects/React/adopt-a-pet-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/user/Desktop/Projects/React/adopt-a-pet-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var getPets=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var type,query,searchParams,requestUrl,response,json,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:type=_args.length>0&&_args[0]!==undefined?_args[0]:'';query=_args.length>1&&_args[1]!==undefined?_args[1]:'';searchParams=new URLSearchParams({type:type,query:query});requestUrl=\"/animals?\".concat(searchParams.toString());_context.next=6;return fetch(requestUrl,{method:'GET'});case 6:response=_context.sent;_context.next=9;return response.json();case 9:json=_context.sent;return _context.abrupt(\"return\",json);case 11:case\"end\":return _context.stop();}}},_callee);}));return function getPets(){return _ref.apply(this,arguments);};}();export var getPetDetails=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var requestUrl,response,json;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:requestUrl=\"/animals/\".concat(id);_context2.next=3;return fetch(requestUrl,{method:'GET'});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:json=_context2.sent;return _context2.abrupt(\"return\",json);case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function getPetDetails(_x){return _ref2.apply(this,arguments);};}();export var getPetTypes=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var requestUrl,response,json;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:requestUrl=\"/types\";_context3.next=3;return fetch(requestUrl,{method:'GET'});case 3:response=_context3.sent;_context3.next=6;return response.json();case 6:json=_context3.sent;return _context3.abrupt(\"return\",json);case 8:case\"end\":return _context3.stop();}}},_callee3);}));return function getPetTypes(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/user/Desktop/Projects/React/adopt-a-pet-starter/src/api/petfinder/index.js"],"names":["getPets","type","query","searchParams","URLSearchParams","requestUrl","toString","fetch","method","response","json","getPetDetails","id","getPetTypes"],"mappings":"qVAAA,MAAO,IAAMA,CAAAA,OAAO,0FAAG,wMAAOC,IAAP,+CAAc,EAAd,CAAkBC,KAAlB,+CAA0B,EAA1B,CACfC,YADe,CACA,GAAIC,CAAAA,eAAJ,CAAoB,CAAEH,IAAI,CAAJA,IAAF,CAAQC,KAAK,CAALA,KAAR,CAApB,CADA,CAEfG,UAFe,oBAEUF,YAAY,CAACG,QAAb,EAFV,wBAIEC,CAAAA,KAAK,CAACF,UAAD,CAAa,CACvCG,MAAM,CAAE,KAD+B,CAAb,CAJP,QAIfC,QAJe,qCAQFA,CAAAA,QAAQ,CAACC,IAAT,EARE,QAQfA,IARe,+CAUdA,IAVc,yDAAH,kBAAPV,CAAAA,OAAO,0CAAb,CAaP,MAAO,IAAMW,CAAAA,aAAa,2FAAG,kBAAOC,EAAP,mJACrBP,UADqB,oBACIO,EADJ,yBAEJL,CAAAA,KAAK,CAACF,UAAD,CAAa,CACvCG,MAAM,CAAE,KAD+B,CAAb,CAFD,QAErBC,QAFqB,uCAMRA,CAAAA,QAAQ,CAACC,IAAT,EANQ,QAMrBA,IANqB,iDAQpBA,IARoB,0DAAH,kBAAbC,CAAAA,aAAa,6CAAnB,CAWP,MAAO,IAAME,CAAAA,WAAW,2FAAG,qKACnBR,UADmB,iCAEFE,CAAAA,KAAK,CAACF,UAAD,CAAa,CACvCG,MAAM,CAAE,KAD+B,CAAb,CAFH,QAEnBC,QAFmB,uCAMNA,CAAAA,QAAQ,CAACC,IAAT,EANM,QAMnBA,IANmB,iDAQlBA,IARkB,0DAAH,kBAAXG,CAAAA,WAAW,2CAAjB","sourcesContent":["export const getPets = async (type = '', query = '') => {\n  const searchParams = new URLSearchParams({ type, query });\n  const requestUrl = `/animals?${searchParams.toString()}`;\n\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetDetails = async (id) => {\n  const requestUrl = `/animals/${id}`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n\nexport const getPetTypes = async () => {\n  const requestUrl = `/types`;\n  const response = await fetch(requestUrl, {\n    method: 'GET'\n  });\n\n  const json = await response.json();\n\n  return json;\n};\n"]},"metadata":{},"sourceType":"module"}